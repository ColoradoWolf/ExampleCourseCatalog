// <auto-generated />
using System;
using CourseCatalogDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseCatalogDb.Migrations
{
    [DbContext(typeof(CourseCatalogDbContext))]
    [Migration("20240925164502_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseCatalogDb.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn_Utc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("LastUpdatedOn_Utc")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseDesc = "This is Course #1",
                            CourseName = "Course #1"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseDesc = "This is Course #2",
                            CourseName = "Course #2"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseDesc = "This is Course #3",
                            CourseName = "Course #3"
                        });
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<DateTime>("CreatedOn_Utc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("LastUpdatedOn_Utc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LessonDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("VideoLength")
                        .HasColumnType("time");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LessonId");

                    b.HasIndex("SectionId", "Order")
                        .IsUnique();

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            LessonId = 1,
                            LessonDesc = "1st Lesson of Section #1",
                            LessonName = "Lesson #1",
                            Order = 1,
                            SectionId = 1,
                            VideoLength = new TimeSpan(0, 0, 30, 25, 0),
                            VideoUrl = "https://xyz.com/videos/lesson1.mp4"
                        },
                        new
                        {
                            LessonId = 2,
                            LessonDesc = "1st Lesson of Section #2",
                            LessonName = "Lesson #2",
                            Order = 1,
                            SectionId = 2,
                            VideoLength = new TimeSpan(0, 0, 15, 46, 0),
                            VideoUrl = "https://xyz.com/videos/lesson2.mp4"
                        },
                        new
                        {
                            LessonId = 3,
                            LessonDesc = "1st Lesson of Section #3",
                            LessonName = "Lesson #3",
                            Order = 1,
                            SectionId = 3,
                            VideoLength = new TimeSpan(0, 0, 45, 15, 0),
                            VideoUrl = "https://xyz.com/videos/lesson3.mp4"
                        },
                        new
                        {
                            LessonId = 4,
                            LessonDesc = "1st Lesson of Section #4",
                            LessonName = "Lesson #4",
                            Order = 1,
                            SectionId = 4,
                            VideoLength = new TimeSpan(0, 0, 20, 10, 0),
                            VideoUrl = "https://xyz.com/videos/lesson4.mp4"
                        },
                        new
                        {
                            LessonId = 5,
                            LessonDesc = "1st Lesson of Section #5",
                            LessonName = "Lesson #5",
                            Order = 1,
                            SectionId = 5,
                            VideoLength = new TimeSpan(0, 0, 18, 57, 0),
                            VideoUrl = "https://xyz.com/videos/lesson5.mp4"
                        },
                        new
                        {
                            LessonId = 6,
                            LessonDesc = "1st Lesson of Section #6",
                            LessonName = "Lesson #6",
                            Order = 1,
                            SectionId = 6,
                            VideoLength = new TimeSpan(0, 0, 10, 53, 0),
                            VideoUrl = "https://xyz.com/videos/lesson6.mp4"
                        },
                        new
                        {
                            LessonId = 7,
                            LessonDesc = "2nd Lesson of Section #1",
                            LessonName = "Lesson #7",
                            Order = 2,
                            SectionId = 1,
                            VideoLength = new TimeSpan(0, 0, 12, 33, 0),
                            VideoUrl = "https://xyz.com/videos/lesson7.mp4"
                        },
                        new
                        {
                            LessonId = 8,
                            LessonDesc = "2nd Lesson of Section #2",
                            LessonName = "Lesson #8",
                            Order = 2,
                            SectionId = 2,
                            VideoLength = new TimeSpan(0, 0, 16, 5, 0),
                            VideoUrl = "https://xyz.com/videos/lesson8.mp4"
                        },
                        new
                        {
                            LessonId = 9,
                            LessonDesc = "2nd Lesson of Section #3",
                            LessonName = "Lesson #9",
                            Order = 2,
                            SectionId = 3,
                            VideoLength = new TimeSpan(0, 0, 22, 9, 0),
                            VideoUrl = "https://xyz.com/videos/lesson9.mp4"
                        },
                        new
                        {
                            LessonId = 10,
                            LessonDesc = "2nd Lesson of Section #4",
                            LessonName = "Lesson #10",
                            Order = 2,
                            SectionId = 4,
                            VideoLength = new TimeSpan(0, 0, 21, 45, 0),
                            VideoUrl = "https://xyz.com/videos/lesson10.mp4"
                        },
                        new
                        {
                            LessonId = 11,
                            LessonDesc = "2nd Lesson of Section #5",
                            LessonName = "Lesson #11",
                            Order = 2,
                            SectionId = 5,
                            VideoLength = new TimeSpan(0, 0, 21, 22, 0),
                            VideoUrl = "https://xyz.com/videos/lesson11.mp4"
                        },
                        new
                        {
                            LessonId = 12,
                            LessonDesc = "1st Lesson of Section #6",
                            LessonName = "Lesson #12",
                            Order = 2,
                            SectionId = 6,
                            VideoLength = new TimeSpan(0, 0, 14, 28, 0),
                            VideoUrl = "https://xyz.com/videos/lesson12.mp4"
                        },
                        new
                        {
                            LessonId = 13,
                            LessonDesc = "3rd Lesson of Section #6",
                            LessonName = "Lesson #13",
                            Order = 3,
                            SectionId = 6,
                            VideoLength = new TimeSpan(0, 0, 16, 47, 0),
                            VideoUrl = "https://xyz.com/videos/lesson13.mp4"
                        },
                        new
                        {
                            LessonId = 14,
                            LessonDesc = "3rd Lesson of Section #3",
                            LessonName = "Lesson #14",
                            Order = 3,
                            SectionId = 3,
                            VideoLength = new TimeSpan(0, 0, 11, 9, 0),
                            VideoUrl = "https://xyz.com/videos/lesson14.mp4"
                        },
                        new
                        {
                            LessonId = 15,
                            LessonDesc = "3rd Lesson of Section #2",
                            LessonName = "Lesson #15",
                            Order = 3,
                            SectionId = 2,
                            VideoLength = new TimeSpan(0, 0, 19, 58, 0),
                            VideoUrl = "https://xyz.com/videos/lesson15.mp4"
                        });
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn_Utc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("LastUpdatedOn_Utc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SectionDesc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SectionId");

                    b.HasIndex("CourseId", "Order")
                        .IsUnique();

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            SectionId = 1,
                            CourseId = 1,
                            Order = 1,
                            SectionDesc = "1st Section of Course #1",
                            SectionName = "Section #1"
                        },
                        new
                        {
                            SectionId = 2,
                            CourseId = 1,
                            Order = 2,
                            SectionDesc = "2nd Section of Course #1",
                            SectionName = "Section #2"
                        },
                        new
                        {
                            SectionId = 3,
                            CourseId = 2,
                            Order = 1,
                            SectionDesc = "1st Section of Course #2",
                            SectionName = "Section #3"
                        },
                        new
                        {
                            SectionId = 4,
                            CourseId = 2,
                            Order = 2,
                            SectionDesc = "2nd Section of Course #2",
                            SectionName = "Section #4"
                        },
                        new
                        {
                            SectionId = 5,
                            CourseId = 2,
                            Order = 3,
                            SectionDesc = "3rd Section of Course #2",
                            SectionName = "Section #5"
                        },
                        new
                        {
                            SectionId = 6,
                            CourseId = 3,
                            Order = 1,
                            SectionDesc = "1st Section of Course #3",
                            SectionName = "Section #6"
                        });
                });

            modelBuilder.Entity("CourseCatalogDb.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedOn_Utc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastUpdatedOn_Utc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "qwerty@some-email.org",
                            ScreenName = "Qwerty McGee"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "xyz@abc.net",
                            ScreenName = "Joe Schmoe"
                        });
                });

            modelBuilder.Entity("CourseCatalogDb.Models.UserLesson", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn_Utc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("LastUpdatedOn_Utc")
                        .HasColumnType("datetime2");

                    b.Property<float>("PctViewed")
                        .HasColumnType("real");

                    b.HasKey("UserId", "LessonId");

                    b.HasIndex("LessonId");

                    b.ToTable("UserLessons", t =>
                        {
                            t.HasCheckConstraint("CK_UserLesson_PctViewed", "PctViewed >= 0 AND PctViewed <= 1");
                        });
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Lesson", b =>
                {
                    b.HasOne("CourseCatalogDb.Models.Section", "Section")
                        .WithMany("Lessons")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Section", b =>
                {
                    b.HasOne("CourseCatalogDb.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CourseCatalogDb.Models.UserLesson", b =>
                {
                    b.HasOne("CourseCatalogDb.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseCatalogDb.Models.User", "User")
                        .WithMany("UserLessons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Course", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("CourseCatalogDb.Models.Section", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("CourseCatalogDb.Models.User", b =>
                {
                    b.Navigation("UserLessons");
                });
#pragma warning restore 612, 618
        }
    }
}
